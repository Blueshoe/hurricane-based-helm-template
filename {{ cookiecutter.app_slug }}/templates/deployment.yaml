{% raw -%}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include {% endraw %}"{{ cookiecutter.app_slug }}.fullname"{% raw %} . }}
  labels:
    {{- include {% endraw %}"{{ cookiecutter.app_slug }}.labels"{% raw %}  . | nindent 4 }}
    {{- if .Values.deploymentLabels }}
    {{- toYaml .Values.deploymentLabels | nindent 4 }}
    {{- end }}
  {{- if .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml .Values.deploymentAnnotations | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include {% endraw %}"{{ cookiecutter.app_slug }}.selectorLabels"{% raw %}  . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
      labels:
        {{- include {% endraw %}"{{ cookiecutter.app_slug }}.selectorLabels"{% raw %} . | nindent 8 }}
    spec:
      {%- endraw -%}
      {% if cookiecutter.use_imagePullSecret == "yes" %}
      {% raw -%}
      imagePullSecrets:
        - name: {% endraw %}"{{ cookiecutter.app_slug }}-robot-pull-secret"
      {%- endif %}
      {% raw -%}
      serviceAccountName: {{ include {% endraw %}"{{ cookiecutter.app_slug }}.serviceAccountName"{% raw %} . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        {% endraw -%}
        {% if cookiecutter.use_oauth2_proxy == "yes" %}
        {% raw -%}
        - name: oauth2-proxy
          image: {{ .Values.oauth2proxy.image.repository }}:{{ .Values.oauth2proxy.image.tag }}
          imagePullPolicy: {{ .Values.oauth2proxy.image.pullPolicy }}
          readinessProbe:
            httpGet:
              path: /ping
              port: {{ .Values.oauth2proxy.containerPort }}
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /ping
              port: {{ .Values.oauth2proxy.containerPort }}
            initialDelaySeconds: 5
            periodSeconds: 5
          ports:
            - containerPort: {{ .Values.oauth2proxy.containerPort }}
              protocol: TCP
              name: {{ .Values.containerPort.name }}
          envFrom:
            - configMapRef:
                name: {% endraw %}{{ cookiecutter.app_slug }}-oauth2proxy{% raw %}
          {{- if (eq .Values.global.environment "development") }}
            - configMapRef:
                name: {% endraw %}{{ cookiecutter.app_slug }}-configmap{% raw %}
          env:
            {{ include {% endraw %}"{{ cookiecutter.app_slug }}.envVariables"{% raw %} . | nindent 12 }}
            {% endraw %}{% if cookiecutter.use_celery_worker == "yes" or cookiecutter.use_celery_beat == "yes" -%}{% raw %}
            {{ include {% endraw %}"{{ cookiecutter.app_slug }}.envVariablesAmqpConnect"{% raw %} . | nindent 12 }}
            {% endraw -%}
            {%- endif -%}
            {% raw -%}
          {{- end }}
        {% endraw -%}
        {% endif -%}
        {% raw -%}
        - name: {{ include {% endraw %}"{{ cookiecutter.app_slug }}.fullname"{% raw %} . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh","-c"]
          args: ["python manage.py serve
                  --command 'migrate'
                  --command 'collectstatic --no-input'
                  --port {{ .Values.containerPort.portNumber }}
                  --probe-port {{ .Values.containerProbePort }}
                  {{- if .Values.serveStatic }}
                  --static
                  {{ end -}}
                  {{- if .Values.serveMedia }}
                  --media
                  {{ end -}}
                 "]
          ports:
            - name: {{ .Values.containerPort.name }}{% endraw %}{% if cookiecutter.use_oauth2_proxy == "yes" %}-intern{% endif %}{% raw %}
              containerPort: {{ .Values.containerPort.portNumber }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /alive
              port: {{ .Values.containerProbePort }}
            periodSeconds: 10
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.containerProbePort }}
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /startup
              port: {{ .Values.containerProbePort }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{ include {% endraw %}"{{ cookiecutter.app_slug }}.envVariables"{% raw %} . | nindent 12 }}
          {% endraw %}{% if cookiecutter.use_celery_worker == "yes" or cookiecutter.use_celery_beat == "yes" -%}{% raw %}
            {{ include {% endraw %}"{{ cookiecutter.app_slug }}.envVariablesAmqpConnect"{% raw %} . | nindent 12 }}
          {% endraw -%}
          {%- endif -%}
          {% raw %}
          envFrom:
            - configMapRef:
                name: {% endraw %}{{ cookiecutter.app_slug }}{% raw %}-configmap{% endraw %}
      {% raw %}
      initContainers:
        {% endraw %}
        {% if cookiecutter.use_celery_worker == "yes" or cookiecutter.use_celery_beat == "yes" -%}
        {% raw %}
        - name: init-rabbitmq-queue
          image: "{{ .Values.amqpConnect.repository }}:{{ .Values.amqpConnect.tag }}"
          imagePullPolicy: {{ .Values.amqpConnect.pullPolicy }}
          # only start the container when rabbitmq is ready
          command: ['python', '-m', 'check_amqp_connection.py']
          env:
            {{- include {% endraw %}"{{ cookiecutter.app_slug }}.envVariablesAmqpConnect"{% raw %} . | nindent 12 }}
        {% endraw %}
        {% endif -%}
      {% raw %}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}

{%- endraw %}