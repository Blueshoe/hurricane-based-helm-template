{% raw -%}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include {% endraw %}"{{ cookiecutter.app_slug }}.fullnameWorker"{% raw %} . }}
  labels:
    {{- include {% endraw %}"{{ cookiecutter.app_slug }}.labelsWorker"{% raw %} . | nindent 4 }}
    {{- if .Values.deploymentLabels }}
    {{- toYaml .Values.deploymentLabels | nindent 4 }}
    {{- end}}
  {{- if .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml .Values.deploymentAnnotations | nindent 4 }}
  {{- end}}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include {% endraw %}"{{ cookiecutter.app_slug }}.selectorLabelsWorker"{% raw %} . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end}}
      labels:
        {{- include {% endraw %}"{{ cookiecutter.app_slug }}.selectorLabelsWorker"{% raw %} . | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: robot-pull-secret
      serviceAccountName: {{ include {% endraw %}"{{ cookiecutter.app_slug }}.serviceAccountName"{% raw %} . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include {% endraw %}"{{ cookiecutter.app_slug }}.fullnameWorker"{% raw %} . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["celery"]
          args: ["-A", "configuration.celery.app",
                 "worker",
                 "-O", "fair"]
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            exec:
              # bash is needed to replace the environment variable
              command: [
                "bash",
                "-c",
                "celery -A configuration.celery.app inspect ping -d celery@$HOSTNAME"
              ]
            periodSeconds: 60  # default is quite often and celery uses a lot cpu/ram then.
            timeoutSeconds: 10  # default is too low
            failureThreshold: 8
          readinessProbe:
            exec:
              # bash is needed to replace the environment variable
              command: [
                "bash",
                "-c",
                "celery -A configuration.celery.app inspect ping -d celery@$HOSTNAME"
              ]
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 10
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{ include {% endraw %}"{{ cookiecutter.app_slug }}.envVariables"{% raw %} . | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {% endraw %}{{ cookiecutter.app_slug }}{% raw %}-configmap
      initContainers:
        - name: init-rabbitmq-queue
          image: "{{ .Values.amqpConnect.repository }}:{{ .Values.amqpConnect.tag }}"
          imagePullPolicy: {{ .Values.amqpConnect.pullPolicy }}
          # only start the container when rabbitmq is ready
          command: ['python', '-m', 'check_amqp_connection.py']
          env:
            {{- include {% endraw %}"{{ cookiecutter.app_slug }}.envVariablesAmqpConnect"{% raw %} . | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{%- endraw -%}
